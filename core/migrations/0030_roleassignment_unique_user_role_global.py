# Generated by Django 5.2.3 on 2025-08-12 05:50

from django.conf import settings
from django.db import migrations, models
from django.db.models import Count


def dedupe_global_role_assignments(apps, schema_editor):
    RoleAssignment = apps.get_model("core", "RoleAssignment")
    duplicates = (
        RoleAssignment.objects.filter(organization__isnull=True)
        .values("user_id", "role_id")
        .annotate(cnt=Count("id"))
        .filter(cnt__gt=1)
    )
    for dup in duplicates:
        ids = list(
            RoleAssignment.objects.filter(
                user_id=dup["user_id"],
                role_id=dup["role_id"],
                organization__isnull=True,
            )
            .values_list("id", flat=True)
            .order_by("id")[1:]
        )
        if ids:
            RoleAssignment.objects.filter(id__in=ids).delete()


class Migration(migrations.Migration):

    dependencies = [
        ("core", "0029_backfill_inactive_users"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.RunPython(dedupe_global_role_assignments, migrations.RunPython.noop),
        migrations.AddConstraint(
            model_name="roleassignment",
            constraint=models.UniqueConstraint(
                condition=models.Q(organization__isnull=True),
                fields=("user", "role"),
                name="unique_user_role_global",
            ),
        ),
    ]
